{"version":3,"file":"static/js/726.5bd53494.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    // Support deprecated exitBeforeEnter prop\n    if (exitBeforeEnter) {\n        mode = \"wait\";\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"Replace exitBeforeEnter with mode='wait'\");\n        }\n    }\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    let [forceRender] = useForceUpdate();\n    const forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach((key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        const onExit = () => {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { sync } from '../frameloop/index.mjs';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => sync.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { useMemo } from 'react';\n\nfunction createHoverEvent(visualElement, isActive, applyVariants, callback) {\n    return (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (applyVariants && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", useMemo(() => {\n        return onHoverStart || whileHover\n            ? createHoverEvent(visualElement, true, Boolean(whileHover), onHoverStart)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", useMemo(() => {\n        return onHoverEnd || whileHover\n            ? createHoverEvent(visualElement, false, Boolean(whileHover), onHoverEnd)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { useRef, useCallback } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { addPointerEvent, usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { addDomEvent, useDomEvent } from '../events/use-dom-event.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, ...props }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart ||\n            onTap ||\n            onTapCancel ||\n            props[\"onPointerDown\"]),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        const latestProps = visualElement.getProps();\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        var _a, _b, _c, _d;\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info)\n            : (_d = (_c = visualElement.getProps()).onTap) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n    }\n    function onPointerCancel(event, info) {\n        var _a, _b;\n        if (!checkPointerEnd())\n            return;\n        (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n    }\n    function onPointerStart(event, info) {\n        var _a;\n        const latestProps = visualElement.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        }\n        (_a = latestProps.onTapStart) === null || _a === void 0 ? void 0 : _a.call(latestProps, event, info);\n    }\n    const callbackDependencies = [\n        Boolean(onTapStart),\n        Boolean(onTap),\n        Boolean(whileTap),\n        visualElement,\n    ];\n    const startPress = useCallback((event, info) => {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        onPointerStart(event, info);\n    }, callbackDependencies);\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? startPress : undefined, eventOptions);\n    const startAccessiblePress = useCallback(() => {\n        const stopKeydownListener = addDomEvent(visualElement.current, \"keydown\", (event) => {\n            if (event.key !== \"Enter\" || isPressing.current)\n                return;\n            isPressing.current = true;\n            cancelPointerEndListeners.current = addDomEvent(visualElement.current, \"keyup\", () => {\n                if (event.key !== \"Enter\" || !checkPointerEnd())\n                    return;\n                fireSyntheticPointerEvent(\"up\", visualElement.getProps().onTap);\n            }, eventOptions);\n            fireSyntheticPointerEvent(\"down\", onPointerStart);\n        });\n        const stopBlurListener = addDomEvent(visualElement.current, \"blur\", () => {\n            stopKeydownListener();\n            stopBlurListener();\n            if (isPressing.current) {\n                fireSyntheticPointerEvent(\"cancel\", onPointerCancel);\n            }\n        });\n    }, callbackDependencies);\n    useDomEvent(visualElement, \"focus\", hasPressListeners ? startAccessiblePress : undefined);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\nimport { useRef, useCallback } from 'react';\n\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const isFocusActive = useRef(false);\n    const { animationState } = visualElement;\n    const onFocus = useCallback(() => {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = visualElement.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !animationState)\n            return;\n        animationState.setActive(AnimationType.Focus, true);\n        isFocusActive.current = true;\n    }, [animationState]);\n    const onBlur = useCallback(() => {\n        if (!isFocusActive.current || !animationState)\n            return;\n        animationState.setActive(AnimationType.Focus, false);\n        isFocusActive.current = false;\n    }, [animationState]);\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"9.0.1\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (visualElement &&\n            element instanceof HTMLElement &&\n            !(visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onUpdate)) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        const prevProps = this.props;\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"9.0.1\", `Attempting to mix Framer Motion versions ${nextValue.version} with 9.0.1 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        ((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            var _a;\n            return (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            this.prevTransformTemplateValue = (_c = this.getTransformTemplate()) === null || _c === void 0 ? void 0 : _c(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplateValue = (_a = this.getTransformTemplate()) === null || _a === void 0 ? void 0 : _a(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n"],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","children","React","PopChild","id","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","values","register","delete","undefined","forEach","_","key","PresenceContext","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","useState","forcedRenderCount","setForcedRenderCount","forceRender","useCallback","sync","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exiting","Set","presentChildren","allChildren","isInitialRender","updateChildLookup","useUnmountEffect","clear","map","presentKeys","targetKeys","numPresent","length","i","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement","createContext","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","window","callback","requestAnimationFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","cancel","index","process","createRenderStep","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","Math","max","min","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","useVisualElement","Component","visualState","createVisualElement","parent","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","presenceId","blockInitialAnimation","render","HandoffAppearAnimations","useEffect","animationState","animateChanges","isRefObject","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","VisualElementHandler","setProps","React__default","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","isBrowser","lazyStrictMode","initialLayoutGroupConfig","Provider","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","renderedChildren","camelToDash","str","replace","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","applyVariants","info","setActive","Hover","isNodeOrChild","parentElement","combineFunctions","pipe","transformers","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTapCancel","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","_b","_c","_d","onPointerCancel","onPointerStart","latestProps","callbackDependencies","startPress","startAccessiblePress","stopKeydownListener","stopBlurListener","whileFocus","isFocusActive","onFocus","isFocusVisible","matches","Focus","onBlur","onHoverStart","onHoverEnd","whileHover","usePresence","shallowCompare","next","prev","prevLength","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","getSize","stop","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","update","passTimestamp","driverControls","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","createInstantAnimation","setValue","inertia","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","distance2D","xDelta","yDelta","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","BoundingBoxDimension","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","ProjectionNodeConstructor","renderedProps","layoutScroll","layoutRoot","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","object","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","getOwnPropertyDescriptor","arguments","apply","SVGVisualElement","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","_e","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","getTransformTemplate","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","baseConfig","createDomMotionConfig","useLayoutEffect"],"sourceRoot":""}